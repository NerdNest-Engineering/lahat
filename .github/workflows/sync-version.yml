name: Sync Package Version

on:
  release:
    types: [published]

jobs:
  sync-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
        
      - name: Extract version from release
        id: version
        run: |
          # Get version from the release tag
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"
        
      - name: Check if package.json needs update
        id: check
        run: |
          CURRENT_VERSION=$(node -e "console.log(require('./package.json').version)")
          TARGET_VERSION="${{ steps.version.outputs.version }}"
          
          echo "Current package.json version: $CURRENT_VERSION"
          echo "Target version from release: $TARGET_VERSION"
          
          if [ "$CURRENT_VERSION" != "$TARGET_VERSION" ]; then
            echo "needs_update=true" >> $GITHUB_OUTPUT
            echo "Version sync needed"
          else
            echo "needs_update=false" >> $GITHUB_OUTPUT
            echo "Version already in sync"
          fi
        
      - name: Create version sync PR
        if: steps.check.outputs.needs_update == 'true'
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          BRANCH_NAME="sync-version-$VERSION"
          
          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Create and switch to new branch
          git checkout -b $BRANCH_NAME
          
          # Update package.json version
          npm version $VERSION --no-git-tag-version --allow-same-version
          
          # Commit the change
          git add package.json
          git commit -m "chore: sync package.json version to $VERSION
          
          This PR automatically syncs the package.json version to match the published release $VERSION.
          
          - Updated by: GitHub Actions
          - Triggered by: Release publication
          - Release: https://github.com/${{ github.repository }}/releases/tag/v$VERSION"
          
          # Push the branch
          git push origin $BRANCH_NAME
          
          # Create pull request using GitHub CLI
          gh pr create \
            --title "chore: sync package.json version to $VERSION" \
            --body "ü§ñ **Automated Version Sync**

          This PR automatically syncs the package.json version to match the published release.

          **Changes:**
          - Updated package.json version from \`$(node -e "console.log(require('./package.json').version)")\` to \`$VERSION\`

          **Details:**
          - üè∑Ô∏è **Release:** [v$VERSION](https://github.com/${{ github.repository }}/releases/tag/v$VERSION)
          - ü§ñ **Triggered by:** Release publication
          - ‚ö° **Auto-generated by:** GitHub Actions

          This ensures the repository version stays in sync with published releases." \
            --head $BRANCH_NAME \
            --base main \
            --label "automated" \
            --label "version-sync"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
